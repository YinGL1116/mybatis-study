<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--命名空间不可缺少！-->
<mapper namespace="com.envision.dao.IUserDao">
    <select id="findAll" resultType="com.envision.domain.User">
        select * from user;
    </select>

    <!-- 入参是基本数据类型 名字可以随便写 -->
    <select id="findById" parameterType="int" resultType="com.envision.domain.User">
        select * from user where id=#{xid};
    </select>

    <insert id="save" parameterType="com.envision.domain.User">
        <!-- keyProperty 实体类中对应的属性  因为要保存的实体类 原来不论id是多少 由于mysql的id自增长 所以执行保存操作后
            会把要保存的user中的id修改成在mysql中保存的id
        -->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday) values(#{username},#{address},#{sex},#{birthday});
    </insert>

    <delete id="deleteById" parameterType="int">
        delete from user where id=#{xxxxxxid};
    </delete>
    <update id="update" parameterType="com.envision.domain.User" >

    </update>

    <select id="findByName" parameterType="String" resultType="com.envision.domain.User">
        select * from user where username like #{nnnnname};
    </select>
    
    <select id="countSex" parameterType="String" resultType="int">
        select count(*) from user where sex=#{sexxxxx};
    </select>

    <select id="findByVo" parameterType="com.envision.domain.QueryVo" resultType="com.envision.domain.User">
        select * from user where username=#{user.username}
    </select>


    <select id="findByCondition" parameterType="queryVo" resultType="user">
        select * from user where 1=1
        <if test="name != null">
            and username=#{name}
        </if>
    </select>

</mapper>